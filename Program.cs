Задача 64: Задайте значения N. Напишите программу, которая выведет все натуральные числа в промежутке от N до 1.
N = 5. -> «5, 4, 3, 2, 1»
N = 8. -> «8, 7, 6, 5, 4, 3, 2, 1»
*/
 
Консоль . Запись ( " Введите число: " ) ;
целое  число  = Преобразовать . ToInt32 ( Console.ReadLine ( ) ) ; _ _
целое  число  =  1 ;
NaturalToLow ( число , количество ) ;


void  NaturalToLow ( целое число  n ,  число целых чисел  )
{
    если  ( количество  >  п )
    {
        возврат ;
    }
    еще
    {
        NaturalToLow ( n ,  количество  +  1 ) ;
        Консоль . Запись ( количество  +  "  " ) ;
    }
}

 /*
Задача 66: Задайте значения M и N. Напишите программу, которая дает большое количество натуральных элементов в промежутке от M до N.
М = 1; N = 15 -> 120
М = 4; N = 8. -> 30
*/
 
Консоль . Write ( " Введите число M: " ) ;
int  м  = Преобразовать . ToInt32 ( Console.ReadLine ( ) ) ; _ _

Консоль . Write ( " Введите число N: " ) ;
int  n  = конвертировать . ToInt32 ( Console.ReadLine ( ) ) ; _ _

СуммаОтMToN ( m , n ) ;

// вызов функции "сумма чисел от M до N"
void  SumFromMToN ( int  m ,  int  n )
{
    Консоль . Напишите ( SumMN ( m  -  1 , n ) ) ;
}

// функция числа чисел от M до N
int  SumMN ( int  m ,  int  n )
{
    целое  число  = м ;
    если  ( м  ==  п )
        вернуть  0 ;
    еще
    {
        м ++ ;
        res  =  м  + SumMN ( м , п ) ;
        вернуть  разрешение ;
    }
}

 /*
Задача 68: Напишите программу настройки функций Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.
т = 2, п = 3 -> А (т, п) = 9
т = 3, п = 2 -> А (т, п) = 29
*/
 
Консоль . Write ( " Введите число M: " ) ;
int  м  = Преобразовать . ToInt32 ( Console.ReadLine ( ) ) ; _ _

Консоль . Write ( " Введите число N: " ) ;
int  n  = конвертировать . ToInt32 ( Console.ReadLine ( ) ) ; _ _

Функция Аккермана ( m , n ) ;


// вызов функции Аккермана
void  AkkermanFunction ( int  m ,  int  n )
{
    Консоль . Пишите ( Аккерман ( м , н ) ) ; 
}

// функция Аккермана
инт  Аккерман ( инт  м ,  инт  п )
{
    если  ( м  ==  0 )
    {
        вернуть  n  +  1 ;
    }
    иначе,  если  ( n  ==  0  &&  m  >  0 )
    {
        возвращение Аккерман ( м  -  1 ,  1 ) ;
    }
    еще
    {
        возврат  ( Аккерман ( m  -  1 , Аккерман ( m ,  n  -  1 ) ) ) ) ;
    }
}